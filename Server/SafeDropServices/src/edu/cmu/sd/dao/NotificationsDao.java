/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.cmu.sd.dao;

import java.util.Date;
import edu.cmu.sd.dto.*;
import edu.cmu.sd.exceptions.*;

public interface NotificationsDao
{
	/** 
	 * Inserts a new row in the notifications table.
	 */
	public NotificationsPk insert(Notifications dto) throws NotificationsDaoException;

	/** 
	 * Updates a single row in the notifications table.
	 */
	public void update(NotificationsPk pk, Notifications dto) throws NotificationsDaoException;

	/** 
	 * Deletes a single row in the notifications table.
	 */
	public void delete(NotificationsPk pk) throws NotificationsDaoException;

	/** 
	 * Returns the rows from the notifications table that matches the specified primary-key value.
	 */
	public Notifications findByPrimaryKey(NotificationsPk pk) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'id = :id'.
	 */
	public Notifications findByPrimaryKey(int id) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria ''.
	 */
	public Notifications[] findAll() throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'id = :id'.
	 */
	public Notifications[] findByRequest(int id) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'recevier = :recevier'.
	 */
	public Notifications[] findByUsers(String recevier) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'id = :id'.
	 */
	public Notifications[] findWhereIdEquals(int id) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'text = :text'.
	 */
	public Notifications[] findWhereTextEquals(String text) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'recevier = :recevier'.
	 */
	public Notifications[] findWhereRecevierEquals(String recevier) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'requestid = :requestid'.
	 */
	public Notifications[] findWhereRequestidEquals(int requestid) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the criteria 'created = :created'.
	 */
	public Notifications[] findWhereCreatedEquals(Date created) throws NotificationsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the notifications table that match the specified arbitrary SQL statement
	 */
	public Notifications[] findByDynamicSelect(String sql, Object[] sqlParams) throws NotificationsDaoException;

	/** 
	 * Returns all rows from the notifications table that match the specified arbitrary SQL statement
	 */
	public Notifications[] findByDynamicWhere(String sql, Object[] sqlParams) throws NotificationsDaoException;

}
