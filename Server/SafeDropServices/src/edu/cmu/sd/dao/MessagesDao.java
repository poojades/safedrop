/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package edu.cmu.sd.dao;

import java.util.Date;
import edu.cmu.sd.dto.*;
import edu.cmu.sd.exceptions.*;

public interface MessagesDao
{
	/** 
	 * Inserts a new row in the messages table.
	 */
	public MessagesPk insert(Messages dto) throws MessagesDaoException;

	/** 
	 * Updates a single row in the messages table.
	 */
	public void update(MessagesPk pk, Messages dto) throws MessagesDaoException;

	/** 
	 * Deletes a single row in the messages table.
	 */
	public void delete(MessagesPk pk) throws MessagesDaoException;

	/** 
	 * Returns the rows from the messages table that matches the specified primary-key value.
	 */
	public Messages findByPrimaryKey(MessagesPk pk) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'id = :id'.
	 */
	public Messages findByPrimaryKey(int id) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria ''.
	 */
	public Messages[] findAll() throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'sender = :sender'.
	 */
	public Messages[] findByUsers(String sender) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'receiver = :receiver'.
	 */
	public Messages[] findByUsers2(String receiver) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'id = :id'.
	 */
	public Messages[] findWhereIdEquals(int id) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'text = :text'.
	 */
	public Messages[] findWhereTextEquals(String text) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'sender = :sender'.
	 */
	public Messages[] findWhereSenderEquals(String sender) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'receiver = :receiver'.
	 */
	public Messages[] findWhereReceiverEquals(String receiver) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the criteria 'created = :created'.
	 */
	public Messages[] findWhereCreatedEquals(Date created) throws MessagesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the messages table that match the specified arbitrary SQL statement
	 */
	public Messages[] findByDynamicSelect(String sql, Object[] sqlParams) throws MessagesDaoException;

	/** 
	 * Returns all rows from the messages table that match the specified arbitrary SQL statement
	 */
	public Messages[] findByDynamicWhere(String sql, Object[] sqlParams) throws MessagesDaoException;

}
